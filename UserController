
package com.scb.axessspringboottraining.controller;

import com.scb.axessspringboottraining.entities.User;
import com.scb.axessspringboottraining.service.UserService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import java.util.Map;
import java.util.Optional;

@RestController
@RequestMapping("/api/users")
@CrossOrigin("*")
public class UserController {
    @Autowired
    private UserService userService;

    @Autowired
    private UserProfileService userProfileService;

    @GetMapping("/userbyemail/{email}")
    public Optional<User> getUserByEmail(@PathVariable String email){

        return userService.getUserByEmail(email);
    }

    @GetMapping("/user")
    public List<User> getAllUsers()  {

        return userService.getAllUsers();
    }
    @PostMapping("/adduser")
    public User createUser(@RequestBody User user)  {

        return userService.createUser(user);
    }
    @PostMapping("/userlogin")
    public ResponseEntity<User> userlogin(@RequestBody User loginRequest){
        String email = loginRequest.getEmail();
        String password = loginRequest.getPassword();

        String loginStatus = userService.userlogin(email, password);
        if (loginStatus.equals("login successful!")) {
            User user = userProfileService.getUserProfile(email);
            return ResponseEntity.ok(user);
        }
        return ResponseEntity.status(401).build();
    }

    @PutMapping("/resetpassword/{email}")
    public ResponseEntity<String> resetPassword(@PathVariable String email, @RequestBody Map<String, String> body) {
        String newPassword = body.get("newPassword");
        boolean isUpdated = userService.resetPassword(email, newPassword);
        if (isUpdated) {
            return ResponseEntity.ok("Password updated successfully!");
        } else {
            return ResponseEntity.badRequest().body("User not found!");
        }
    }
}
 
